// Code generated by goctl. DO NOT EDIT.
// Source: video.sys.proto

package sys

import (
	"context"

	"douyin/app/service/video/rpc/sys/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment              = pb.Comment
	CommentReq           = pb.CommentReq
	CommentRes           = pb.CommentRes
	FavoriteReq          = pb.FavoriteReq
	FavoriteRes          = pb.FavoriteRes
	FeedReq              = pb.FeedReq
	FeedRes              = pb.FeedRes
	GetCommentListReq    = pb.GetCommentListReq
	GetCommentListRes    = pb.GetCommentListRes
	GetFavoriteCountReq  = pb.GetFavoriteCountReq
	GetFavoriteCountRes  = pb.GetFavoriteCountRes
	GetFavoriteListReq   = pb.GetFavoriteListReq
	GetFavoriteListRes   = pb.GetFavoriteListRes
	GetPublishCountReq   = pb.GetPublishCountReq
	GetPublishCountRes   = pb.GetPublishCountRes
	GetPublishListReq    = pb.GetPublishListReq
	GetPublishListRes    = pb.GetPublishListRes
	GetTotalFavoritedReq = pb.GetTotalFavoritedReq
	GetTotalFavoritedRes = pb.GetTotalFavoritedRes
	Profile              = pb.Profile
	PublishReq           = pb.PublishReq
	PublishRes           = pb.PublishRes
	Video                = pb.Video

	Sys interface {
		Publish(ctx context.Context, in *PublishReq, opts ...grpc.CallOption) (*PublishRes, error)
		GetPublishList(ctx context.Context, in *GetPublishListReq, opts ...grpc.CallOption) (*GetPublishListRes, error)
		GetPublishCount(ctx context.Context, in *GetPublishCountReq, opts ...grpc.CallOption) (*GetPublishCountRes, error)
		Feed(ctx context.Context, in *FeedReq, opts ...grpc.CallOption) (*FeedRes, error)
		Favorite(ctx context.Context, in *FavoriteReq, opts ...grpc.CallOption) (*FavoriteRes, error)
		GetFavoriteList(ctx context.Context, in *GetFavoriteListReq, opts ...grpc.CallOption) (*GetFavoriteListRes, error)
		GetFavoriteCount(ctx context.Context, in *GetFavoriteCountReq, opts ...grpc.CallOption) (*GetFavoriteCountRes, error)
		Comment(ctx context.Context, in *CommentReq, opts ...grpc.CallOption) (*CommentRes, error)
		GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListRes, error)
		GetTotalFavorited(ctx context.Context, in *GetTotalFavoritedReq, opts ...grpc.CallOption) (*GetTotalFavoritedRes, error)
	}

	defaultSys struct {
		cli zrpc.Client
	}
)

func NewSys(cli zrpc.Client) Sys {
	return &defaultSys{
		cli: cli,
	}
}

func (m *defaultSys) Publish(ctx context.Context, in *PublishReq, opts ...grpc.CallOption) (*PublishRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.Publish(ctx, in, opts...)
}

func (m *defaultSys) GetPublishList(ctx context.Context, in *GetPublishListReq, opts ...grpc.CallOption) (*GetPublishListRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetPublishList(ctx, in, opts...)
}

func (m *defaultSys) GetPublishCount(ctx context.Context, in *GetPublishCountReq, opts ...grpc.CallOption) (*GetPublishCountRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetPublishCount(ctx, in, opts...)
}

func (m *defaultSys) Feed(ctx context.Context, in *FeedReq, opts ...grpc.CallOption) (*FeedRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.Feed(ctx, in, opts...)
}

func (m *defaultSys) Favorite(ctx context.Context, in *FavoriteReq, opts ...grpc.CallOption) (*FavoriteRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.Favorite(ctx, in, opts...)
}

func (m *defaultSys) GetFavoriteList(ctx context.Context, in *GetFavoriteListReq, opts ...grpc.CallOption) (*GetFavoriteListRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetFavoriteList(ctx, in, opts...)
}

func (m *defaultSys) GetFavoriteCount(ctx context.Context, in *GetFavoriteCountReq, opts ...grpc.CallOption) (*GetFavoriteCountRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetFavoriteCount(ctx, in, opts...)
}

func (m *defaultSys) Comment(ctx context.Context, in *CommentReq, opts ...grpc.CallOption) (*CommentRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.Comment(ctx, in, opts...)
}

func (m *defaultSys) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

func (m *defaultSys) GetTotalFavorited(ctx context.Context, in *GetTotalFavoritedReq, opts ...grpc.CallOption) (*GetTotalFavoritedRes, error) {
	client := pb.NewSysClient(m.cli.Conn())
	return client.GetTotalFavorited(ctx, in, opts...)
}
