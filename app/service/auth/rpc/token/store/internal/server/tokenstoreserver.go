// Code generated by goctl. DO NOT EDIT!
// Source: auth.token_store.proto

package server

import (
	"context"
	"douyin/app/common/log"
	"go.uber.org/zap"

	"douyin/app/service/auth/rpc/token/store/internal/logic"
	"douyin/app/service/auth/rpc/token/store/internal/svc"
	"douyin/app/service/auth/rpc/token/store/pb"
)

type TokenStoreServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTokenStoreServer
}

func NewTokenStoreServer(svcCtx *svc.ServiceContext) *TokenStoreServer {
	return &TokenStoreServer{
		svcCtx: svcCtx,
	}
}

func (s *TokenStoreServer) StoreToken(ctx context.Context, in *pb.StoreTokenReq) (*pb.StoreTokenRes, error) {
	log.Logger.Debug("recv:", zap.String("msg", in.String()))
	l := logic.NewStoreTokenLogic(ctx, s.svcCtx)
	res, err := l.StoreToken(in)
	log.Logger.Debug("send:", zap.String("msg", res.String()))
	return res, err
}

func (s *TokenStoreServer) GetToken(ctx context.Context, in *pb.GetTokenReq) (*pb.GetTokenRes, error) {
	log.Logger.Debug("recv:", zap.String("msg", in.String()))
	l := logic.NewGetTokenLogic(ctx, s.svcCtx)
	res, err := l.GetToken(in)
	log.Logger.Debug("send:", zap.String("msg", res.String()))
	return res, err
}

func (s *TokenStoreServer) RemoveToken(ctx context.Context, in *pb.RemoveTokenReq) (*pb.RemoveTokenRes, error) {
	log.Logger.Debug("recv:", zap.String("msg", in.String()))
	l := logic.NewRemoveTokenLogic(ctx, s.svcCtx)
	res, err := l.RemoveToken(in)
	log.Logger.Debug("send:", zap.String("msg", res.String()))
	return res, err
}
