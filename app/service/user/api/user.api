syntax = "v1"

type (
	Profile {
		Id            int64  `json:"id"` // 用户id
		Name          string `json:"name"` // 用户名称
		FollowCount   int64  `json:"follow_count"` // 关注总数
		FollowerCount int64  `json:"follower_count"` // 粉丝总数
		IsFollow      bool   `json:"is_follow"` // true-已关注，false-未关注
	}
)

type (
	RegisterReq {
		Username string `form:"username"` // 注册用户名，最长32个字符
		Password string `form:"password"` // 密码，最长32个字符
	}
	RegisterRes {
		StatusCode uint32 `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string `json:"status_msg"` // 返回状态描述
		UserId     int64  `json:"user_id,omitempty"` // 用户id
		Token      string `json:"token,omitempty"` // 用户鉴权token
	}
)

type (
	LoginReq {
		Username string `form:"username"` // 登录用户名
		Password string `form:"password"` // 密码
	}
	LoginRes {
		StatusCode uint32 `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string `json:"status_msg"` // 返回状态描述
		UserId     int64  `json:"user_id,omitempty"` // 用户id
		Token      string `json:"token,omitempty"` // 用户鉴权token
	}
)

type (
	GetProfileReq {
		UserId string `form:"user_id"` // 用户id
		Token  string `form:"token"` // 用户鉴权token
	}
	GetProfileRes {
		StatusCode uint32   `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string   `json:"status_msg"` // 返回状态描述
		User       *Profile `json:"user,omitempty"` // 用户信息
	}
)

type (
	RelationReq {
		Token      string `form:"token"` // 用户鉴权token
		ToUserId   string `form:"to_user_id"` // 对方用户id
		ActionType string `form:"action_type"` // 1-关注，2-取消关注
	}
	RelationRes {
		StatusCode uint32 `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string `json:"status_msg"` // 返回状态描述
	}
)

type (
	GetFollowListReq {
		UserId string `form:"user_id"` // 用户id
		Token  string `form:"token"` // 用户鉴权token
	}
	GetFollowListRes {
		StatusCode uint32      `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string      `json:"status_msg"` // 返回状态描述
		UserList   interface{} `json:"user_list,omitempty"` // 用户信息列表
	}
)

type (
	GetFollowerListReq {
		UserId string `form:"user_id"` // 用户id
		Token  string `form:"token"` // 用户鉴权token
	}
	GetFollowerListRes {
		StatusCode uint32      `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string      `json:"status_msg"` // 返回状态描述
		UserList   interface{} `json:"user_list,omitempty"` // 用户列表
	}
)

type (
	GetFriendListReq {
		UserId string `form:"user_id"` // 用户id
		Token  string `form:"token"` // 用户鉴权token
	}
	GetFriendListRes {
		StatusCode uint32      `json:"status_code"` // 状态码，0-成功，其他值-失败
		StatusMsg  string      `json:"status_msg"` // 返回状态描述
		UserList   interface{} `json:"user_list,omitempty"` // 用户列表
	}
)

@server(
	middleware: CORSMiddleware
	prefix: douyin
)
service user {
	@doc(
		summary: "user services"
	)
	@handler Register
	post /user/register (RegisterReq) returns (RegisterRes)
	
	@handler Login
	post /user/login (LoginReq) returns (LoginRes)
}

@server(
	middleware: CORSMiddleware, JWTAuthMiddleware
	prefix: douyin
)
service user {
	@doc(
		summary: "user services"
	)
	@handler GetProfile
	get /user (GetProfileReq) returns (GetProfileRes)
	
	@handler Relation
	post /relation/action (RelationReq) returns (RelationRes)
	
	@handler GetFollowList
	get /relation/follow/list (GetFollowListReq) returns (GetFollowListRes)
	
	@handler GetFollowerList
	get /relation/follower/list (GetFollowerListReq) returns (GetFollowerListRes)
	
	@handler GetFriendList
	get /relation/friend/list (GetFriendListReq) returns (GetFriendListRes)
}