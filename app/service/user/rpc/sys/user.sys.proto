syntax = "proto3";

package user.sys;

option go_package = "./pb";

message Profile{
    int64 id=1;
    string name=2;
    int64 follow_count=3;
    int64 follower_count=4;
    bool is_follow=5;
}
message Profiles{
    repeated Profile profiles = 1;
}

message RegisterReq {
    string username = 1;
    string password = 2;
}
message RegisterRes {
    uint32 status_code = 1;
    string status_msg = 2;
    int64 user_id = 3;
    string token = 4;
}

message LoginReq {
    string username = 1;
    string password = 2;
}
message LoginRes {
    uint32 status_code = 1;
    string status_msg = 2;
    int64 user_id = 3;
    string token = 4;
}

message GetProfileReq{
    int64 src_user_id=1;
    int64 dst_user_id=2;
}
message GetProfileRes{
    uint32 status_code = 1;
    string status_msg = 2;
    Profile user = 3;
}

message RelationReq{
    int64 src_user_id=1;
    int64 dst_user_id=2;
    uint32 action_type=3;
}
message RelationRes{
    uint32 status_code = 1;
    string status_msg = 2;
}

message GetFollowListReq{
    int64 src_user_id=1;
    int64 dst_user_id=2;
}
message GetFollowListRes{
    uint32 status_code = 1;
    string status_msg = 2;
    Profiles user_list=3;
}

message GetFollowerListReq{
    int64 src_user_id=1;
    int64 dst_user_id=2;
}
message GetFollowerListRes{
    uint32 status_code = 1;
    string status_msg = 2;
    Profiles user_list=3;
}

message GetFriendListReq{
    int64 src_user_id=1;
    int64 dst_user_id=2;
}
message GetFriendListRes{
    uint32 status_code = 1;
    string status_msg = 2;
    Profiles user_list=3;
}

service Sys {
    rpc Register (RegisterReq) returns (RegisterRes);
    rpc Login (LoginReq) returns (LoginRes);
    rpc GetProfile (GetProfileReq) returns (GetProfileRes);
    rpc Relation (RelationReq) returns (RelationRes);
    rpc GetFollowList (GetFollowListReq) returns (GetFollowListRes);
    rpc GetFollowerList (GetFollowerListReq) returns (GetFollowerListRes);
    rpc GetFriendList (GetFriendListReq) returns (GetFriendListRes);
}